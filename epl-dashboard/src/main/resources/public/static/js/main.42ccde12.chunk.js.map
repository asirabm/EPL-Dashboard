{"version":3,"sources":["components/pages/MatchSmallCard.js","components/pages/TeamPages.js","components/pages/MatchDetails.js","components/pages/Seasons.js","components/pages/SeasonSelector.js","components/pages/MatchPage.js","components/pages/HomePages.js","App.js","reportWebVitals.js","index.js"],"names":["MatchSmallCard","match","HomeLinkRount","homeTeam","AwayLinkRoute","awayTeam","clr","teamName","useParams","fthg","ftag","className","to","dateTime","TeamPages","useState","matches","team","setTeam","season","setSeason","totalMatches","totalWin","totalDraw","totalDraws","totalLost","useEffect","getMatches","a","fetch","process","response","json","data","response1","data2","name","length","title","value","color","map","id","MatchDetails","t","string","console","log","charAt","toUpperCase","slice","Seasons","s","SeasonSelector","asir","seasonData","MatchPage","matchs","setMatch","booleanCheck","HomePages","teams","setteams","abc","require","config","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42ccde12.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nfunction MatchSmallCard({match}) {\r\n   const HomeLinkRount=`/teams/${match.homeTeam}`;\r\n   const AwayLinkRoute=`/teams/${match.awayTeam}`;\r\n   let clr=\"\";\r\n   const{teamName}=useParams();\r\n\r\n   if(teamName===match.homeTeam){\r\n    \r\n     if(match.fthg>match.ftag){\r\n         clr=\"green\";\r\n     }\r\n     else if(match.ftag===match.fthg){\r\n        clr=\"yellow\";\r\n     }\r\n     else{\r\n       \r\n        clr=\"red\";\r\n       \r\n     }\r\n }\r\n\r\n else if(teamName===match.awayTeam){\r\n   \r\n    if(match.fthg>match.ftag){\r\n        clr=\"red\";\r\n    }\r\n    else if(match.ftag===match.fthg){\r\n       clr=\"yellow\";\r\n    }\r\n    else {\r\n       clr=\"green\";\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={clr}>\r\n            <h5><Link to={HomeLinkRount}>{match.homeTeam}</Link>({match.fthg}) \r\n            <span className='vs'>vs</span>\r\n            <Link to={AwayLinkRoute}>{match.awayTeam}</Link>({match.ftag})</h5>\r\n            <h6>{match.dateTime}</h6>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatchSmallCard\r\n","import{ React,useEffect,useState} from 'react'\r\nimport MatchSmallCard from './MatchSmallCard'\r\n//import MatchDetails from './MatchDetails';\r\nimport { useParams } from 'react-router-dom';\r\nimport './TeamPage.scss';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction TeamPages() {\r\n    const {teamName}=useParams();\r\n    const [team,setTeam]=useState({matches:[]});\r\n    const [season,setSeason]=useState([]);\r\n    let totalMatches=team.totalMatches;\r\n    let totalWin=team.totalWin;\r\n    let totalDraw=team.totalDraws;\r\n    let totalLost=totalMatches-(totalDraw+totalWin);\r\n   \r\n     useEffect(\r\n        () => {\r\n\r\n       const getMatches=async()=>{\r\n         let response=await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n         let data=await response.json();\r\n         \r\n\r\n         let response1=await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/seasons/${teamName}`);\r\n         let data2=await response1.json();\r\n        \r\n         setTeam(data)\r\n         setSeason(data2)\r\n        };\r\n\r\n\r\n        getMatches(); \r\n        \r\n      }, [teamName]);\r\n        return (\r\n        <div className=\"TeamPages\">\r\n            \r\n        <div className='team-name'>\r\n            <h1 className='t-name'>{team.name}</h1>\r\n            <h4>Latest Matches ({season[season.length-1]})</h4>\r\n        </div>\r\n        <div className='win-losses'>\r\n         Win/losses\r\n         <PieChart\r\n  data={[\r\n    { title: 'win', value: totalWin, color: 'darkgreen'},\r\n    { title: 'Lost', value: totalLost, color: 'darkred' },\r\n    { title: 'Draw', value: totalDraw, color: 'darkgray' },\r\n  ]}\r\n/>\r\n        </div>\r\n       \r\n   \r\n\r\n         \r\n\r\n      \r\n        {team.matches.map(match=><MatchSmallCard key={match.id} match={match}/>)}\r\n        <div className='more-link'>\r\n\r\n\r\n            <Link to={`${teamName}/matches/${season[season.length-1]}`}>more</Link>\r\n        </div>\r\n       \r\n        </div>\r\n    )\r\n\r\n  \r\n\r\n\r\n}\r\n\r\nexport default TeamPages\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport './MatchDetails.scss'\r\n\r\nfunction MatchDetails({match}) {\r\n  \r\n    //console.log(m.id);\r\n    \r\n    const HomeLinkRount=`/teams/${match.homeTeam}`;\r\n    const AwayLinkRoute=`/teams/${match.awayTeam}`;\r\n    let clr=\"\";\r\n\r\n    const{teamName}=useParams()\r\n\r\n   if(!match) return null;\r\n\r\n\r\n let t;\r\n\r\n function capitalizeFirstLetter(string) {\r\n    t=string.charAt(0).toUpperCase() + string.slice(1);\r\n    return t;\r\n  }\r\n  \r\n  console.log(capitalizeFirstLetter(teamName)); // Foo\r\n\r\n if(t===match.homeTeam){\r\n    console.log(\"Hello from home\");\r\n     if(match.fthg>match.ftag){\r\n         clr=\"green\";\r\n     }\r\n     else if(match.ftag===match.fthg){\r\n        clr=\"yellow\";\r\n     }\r\n     else{\r\n        console.log(\"knvdknvk\");\r\n        clr=\"red\";\r\n     \r\n     }\r\n }\r\n\r\n else if(t===match.awayTeam){\r\n    \r\n    if(match.fthg>match.ftag){\r\n        clr=\"red\";\r\n    }\r\n    else if(match.ftag===match.fthg){\r\n       clr=\"yellow\";\r\n    }\r\n    else {\r\n       clr=\"green\";\r\n    }\r\n}\r\n\r\n\r\n//clr=\"red\";\r\n\r\n    return (\r\n    <div className='match-detail'>\r\n            <div className={clr}>\r\n            \r\n            \r\n            <h4><Link to={HomeLinkRount}>{match.homeTeam}</Link>({match.fthg}) vs <Link to={AwayLinkRoute}>{match.awayTeam}</Link>({match.ftag})</h4>\r\n           \r\n            <h6 className='match-date'>{match.dateTime}</h6>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MatchDetails\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\n\r\n\r\n\r\nfunction Seasons({s}) {\r\n   // let a=`/teams/${teamName}/matches/${s}`;\r\n  //  console.log(a);\r\n let {teamName}=useParams();\r\n\r\n\r\n    return (\r\n        <div>\r\n           <Link to={`/teams/${teamName}/matches/${s}`}>{s}</Link> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Seasons\r\n","import {React} from 'react'\r\nimport Seasons from './Seasons';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n\r\nfunction SeasonSelector() {\r\n\r\n  //  const [seasons,setseasons] = useState([]);\r\n   let [season,setSeason]=useState([]);\r\n    let {teamName}=useParams();\r\n   // let a=`${process.env.REACT_APP_API_ROOT_URL}/team/seasons/${teamName}`;\r\n\r\nuseEffect(\r\n    () => {\r\n    let asir=async ()=>{\r\n    let response=await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/seasons/${teamName}`);\r\n\r\n    let seasonData=await response.json();\r\n    //console.log(seasonData+\" \"+\"seasonData\");\r\n    setSeason(seasonData);\r\n        \r\n  }\r\n  asir();\r\n    \r\n}, [teamName])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h4>Select Season</h4>\r\n         \r\n           {season.map(s=><Seasons s={s}/>)} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeasonSelector\r\n\r\n","import {React,useEffect,useState} from 'react'\r\n//import { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport MatchDetails from './MatchDetails';\r\n//import MatchSmallCard from './MatchSmallCard';\r\nimport { useParams } from 'react-router-dom';\r\nimport './MatchPage.scss';\r\nimport SeasonSelector from './SeasonSelector';\r\n\r\nfunction MatchPage() {\r\n\r\nconst [matchs, setMatch] = useState([])\r\n//const teamName=\"Arsenal\";\r\n//const season=\"2000-01\";\r\nconst {teamName,season}=useParams();\r\n\r\n\r\n    useEffect(() => {\r\n   const getMatches=async()=>{\r\n    const response=await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?season=${season}`);    \r\n    let data=await response.json();\r\n    setMatch(data);\r\n   \r\n    }\r\n    getMatches();\r\n }, [season,teamName])\r\n\r\n\r\n let t;\r\n let booleanCheck=false;\r\n\r\n /*function capitalizeFirstLetter(string) {\r\n    t=string.charAt(0).toUpperCase() + string.slice(1);\r\n    return t;\r\n  }\r\n  */\r\n\r\n\r\n if(matchs.length===0){\r\n   booleanCheck=true;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='MatchPage'>\r\n           <div className='season-selector'>\r\n               <SeasonSelector/> </div>\r\n            \r\n    <div>\r\n        {booleanCheck?(<h1>{teamName} did not played in {season} season</h1>):(\r\n        \r\n        \r\n        <div>\r\n          <div>\r\n            <h1>Match Page</h1>\r\n            <h3>{t}</h3>\r\n            <h4>{season}</h4>\r\n            {matchs.map(match=><MatchDetails teamName={teamName} match={match}/>)}\r\n            </div>\r\n            \r\n        \r\n        \r\n        \r\n        \r\n        </div>)}\r\n\r\n\r\n\r\n    </div>\r\n\r\n           \r\n\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatchPage\r\n","import {React,useEffect,useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './HomePages.scss'\r\n\r\n\r\n\r\n\r\nfunction HomePages() {\r\n    \r\n    //console.log(\"kjnjknkj\"+process.env.REACT_APP_API_ROOT_URL);\r\n\r\n const [teams, setteams] = useState([]) \r\nuseEffect(() => {\r\n let abc=async()=>{\r\n\r\n    let response= await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/`);\r\n    let data= await response.json();\r\n    setteams(data);\r\n   \r\n }\r\n \r\n abc();\r\n\r\n \r\n\r\n}, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div className='HomePage'>\r\n        <div className='header-section'>\r\n           \r\n        </div>\r\n        <div className='team-grid'>\r\n            \r\n            {teams.map(team=><h3  className='team'><Link to={`teams/${team.name}`}>{team.name}</Link></h3>)}\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePages\r\n","\nimport './App.css';\nimport TeamPages from './components/pages/TeamPages';\nimport {HashRouter as Router,Link,Route,Switch} from 'react-router-dom'\nimport MatchPage from './components/pages/MatchPage';\nimport HomePages from './components/pages/HomePages';\nrequire('dotenv').config()\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <div className='header-section'>\n   \n     \n     </div>\n\n\n         <Router>\n         \n         <Link to=\"/\"><h2>English Premier League Dashboard</h2></Link>\n\n           <Switch>\n\n          \n           <Route path=\"/teams/:teamName/matches/:season\" >\n            <MatchPage></MatchPage> \n            </Route>\n\n\n            <Route path=\"/teams/:teamName\">\n            <TeamPages></TeamPages> \n            </Route>\n\n\n            <Route path=\"/\">\n            <HomePages></HomePages> \n            </Route>\n\n            \n            </Switch>\n         </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}